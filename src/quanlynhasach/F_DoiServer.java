/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlynhasach;

import DAL.DataProviderCheck;
import DAL.GhiDocFile;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
/**
 *
 * @author nguye
 */
public class F_DoiServer extends javax.swing.JFrame {

    /**
     * Creates new form F_DoiSever
     */
    public F_DoiServer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        tf_UserID = new javax.swing.JTextField();
        rb_XacThucWin = new javax.swing.JRadioButton();
        tf_Server = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        tf_Password = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        cb_Database = new javax.swing.JComboBox<>();
        btn_Luu = new javax.swing.JToggleButton();
        btn_KiemTraKetNoi = new javax.swing.JToggleButton();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Đổi Sever");

        jPanel1.setToolTipText("");

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel27.setText("THAY ĐỔI SEVER");

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel28.setText("Server");

        tf_UserID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        rb_XacThucWin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rb_XacThucWin.setText("Xác thực quyền Windows");
        rb_XacThucWin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rb_XacThucWinItemStateChanged(evt);
            }
        });
        rb_XacThucWin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rb_XacThucWinStateChanged(evt);
            }
        });

        tf_Server.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tf_Server.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_ServerActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel29.setText("UserID");

        jLabel30.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel30.setText("Password");

        tf_Password.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel31.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel31.setText("Database");

        cb_Database.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cb_DatabaseMouseClicked(evt);
            }
        });
        cb_Database.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_DatabaseActionPerformed(evt);
            }
        });

        btn_Luu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_Luu.setText("Lưu");
        btn_Luu.setEnabled(false);
        btn_Luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LuuActionPerformed(evt);
            }
        });

        btn_KiemTraKetNoi.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_KiemTraKetNoi.setText("Kiểm tra kết nối");
        btn_KiemTraKetNoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_KiemTraKetNoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_KiemTraKetNoi, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addComponent(btn_Luu, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cb_Database, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_Password)
                            .addComponent(tf_UserID)
                            .addComponent(tf_Server)
                            .addComponent(rb_XacThucWin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(40, 40, 40))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_Server, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(rb_XacThucWin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_UserID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_Database, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Luu, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(btn_KiemTraKetNoi, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_DatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_DatabaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_DatabaseActionPerformed

    private void btn_KiemTraKetNoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_KiemTraKetNoiActionPerformed
        if (tf_Server.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "Tên server không được để trống");
            return;
        }
        else if(cb_Database.getItemCount()== 0){
            JOptionPane.showMessageDialog(this, "Chưa chọn database");
            return;
        }
        
        DataProviderCheck dt = null;
        if (!rb_XacThucWin.isSelected()){
            try{
                dt = new DataProviderCheck(tf_Server.getText(), tf_UserID.getText(), tf_Password.getText(),(String)cb_Database.getSelectedItem());
                dt.Open();
                dt.Close();
                JOptionPane.showMessageDialog(this, "Kiểm tra kết nối thành công");
                btn_Luu.setEnabled(true);
            }catch(Exception e){
                //JOptionPane.showMessageDialog(this, "Kiểm tra kết nối không thành công",JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(this, "Kiểm tra kết nối không thành công");
                btn_Luu.setEnabled(false);
            }
        }
        else{
            try{
                dt = new DataProviderCheck(tf_Server.getText(),null,null,(String)cb_Database.getSelectedItem());
                dt.Open();
                dt.Close();
                JOptionPane.showMessageDialog(this, "Kiểm tra kết nối thành công");
                btn_Luu.setEnabled(true);
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Kiểm tra kết nối không thành công");
                btn_Luu.setEnabled(false);
            }
        }
        
            
    }//GEN-LAST:event_btn_KiemTraKetNoiActionPerformed

    private void cb_DatabaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cb_DatabaseMouseClicked
        cb_Database.removeAllItems();
        try{
            String sql = "SELECT name FROM sys.databases";
            DataProviderCheck dt = new DataProviderCheck(tf_Server.getText(), tf_UserID.getText(), tf_Password.getText(),"master");
            
            dt.Open();
            ResultSet rs = dt.executeQuery(sql);
            
            while(rs.next()){
                cb_Database.addItem(rs.getString("name"));
            }
            dt.Close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Lấy danh sách database lỗi");
        }
    }//GEN-LAST:event_cb_DatabaseMouseClicked

    private void btn_LuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LuuActionPerformed
        DataProviderCheck dt =null;
        if (!rb_XacThucWin.isSelected()) 
            dt = new DataProviderCheck(tf_Server.getText(), tf_UserID.getText(), tf_Password.getText(),(String)cb_Database.getSelectedItem());
        else
            dt = new DataProviderCheck(tf_Server.getText(),null,null,(String)cb_Database.getSelectedItem());
        GhiDocFile.getInstance().GhiFile(dt.getConnectionURL());
        JOptionPane.showMessageDialog(this, "Đã lưu, khởi động lại chương trình để áp dụng");
        this.dispose();
    }//GEN-LAST:event_btn_LuuActionPerformed

    private void rb_XacThucWinItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rb_XacThucWinItemStateChanged
        if (rb_XacThucWin.isSelected()) {
            tf_UserID.setText(null);
            tf_Password.setText(null);
            tf_UserID.setEnabled(false);
            tf_Password.setEnabled(false);
        }
        else{
            tf_UserID.setEnabled(true);
            tf_Password.setEnabled(true);
        }
    }//GEN-LAST:event_rb_XacThucWinItemStateChanged

    private void rb_XacThucWinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rb_XacThucWinStateChanged
        
    }//GEN-LAST:event_rb_XacThucWinStateChanged

    private void tf_ServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_ServerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_ServerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F_DoiServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F_DoiServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F_DoiServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F_DoiServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F_DoiServer().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_KiemTraKetNoi;
    private javax.swing.JToggleButton btn_Luu;
    private javax.swing.JComboBox<String> cb_Database;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rb_XacThucWin;
    private javax.swing.JTextField tf_Password;
    private javax.swing.JTextField tf_Server;
    private javax.swing.JTextField tf_UserID;
    // End of variables declaration//GEN-END:variables
}
